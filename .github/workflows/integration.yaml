name: Integration

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - 'examples/**'
      - 'README.md'

jobs:
  static:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: 'composer:v2, flex'

      - name: Install Package Deps
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: stable
          composer-options: --prefer-dist

      - name: Install Psalm
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist
          working-directory: tools/psalm

      - name: Psalm
        run: tools/psalm/vendor/bin/psalm

  tests:
    name: Test ${{ matrix.php }}, symfony=${{ matrix.symfony }}, deps=${{ matrix.deps }}
    runs-on: ubuntu-latest
    needs: [ static ]
    env:
      SYMFONY_DEPRECATIONS_HELPER: 'max[self]=0'
    strategy:
      matrix:
        include:
          - php: 8.1
            deps: lowest
            symfony: ^6.4

          - php: 8.2
            deps: stable
            symfony: ^7.1

          - php: 8.3
            deps: latest
            symfony: ^7.2

          - php: 8.4
            deps: latest
            symfony: ^7.2

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: 'composer:v2, flex'

      - name: Configure Symfony version
        run: echo SYMFONY_REQUIRE="${{ matrix.symfony }}" >> $GITHUB_ENV

      - name: Set up problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Set up problem matchers for phpunit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install Package Deps
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.deps }}
          composer-options: --prefer-dist

      - name: Install PHPUnit
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.deps }}
          composer-options: --prefer-dist
          working-directory: tools/phpunit

      - name: Run tests
        run: tools/phpunit/vendor/bin/phpunit --colors=always --testdox

  cs:
    name: Code Style & Coverage
    runs-on: ubuntu-latest
    needs: [ static, tests ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          coverage: xdebug
          php-version: ${{ matrix.php }}
          tools: 'composer:v2, flex'

      - name: Install Package Deps
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: stable
          composer-options: --prefer-dist

      - name: Install PHPUnit
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist
          working-directory: tools/phpunit

      - name: Install PHP-CS-Fixer
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: stable
          composer-options: --prefer-dist
          working-directory: tools/php-cs-fixer

      - name: PHP-CS-Fixer
        run: PHP_CS_FIXER_IGNORE_ENV=1 tools/php-cs-fixer/vendor/bin/php-cs-fixer fix --diff --dry-run --show-progress=dots --ansi --verbose

      - name: Create Coverage Report
        run: tools/phpunit/vendor/bin/phpunit --colors=always --coverage-text --coverage-clover=./clover.xml

      - name: Publish Coverage Report
        uses: codecov/codecov-action@v3.1.5
        with:
          files: ./clover.xml
          token: ${{ secrets.CODECOV_TOKEN }}
