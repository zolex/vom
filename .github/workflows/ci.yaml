name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  tests:
    name: 'Tests on ${{ matrix.php }} (deps=${{ matrix.deps }}, symfony=${{ matrix.symfony }})'
    runs-on: ubuntu-latest

    env:
      SYMFONY_DEPRECATIONS_HELPER: 'max[self]=0'

    strategy:
      matrix:
        include:
          # Test lowest dependencies
          #- php: 8.1
          #  deps: lowest
          #  symfony: '^6.1'

          # Test LTS php/Symfony
          - php: 8.1
            deps: stable
            symfony: '^6.1'

          # Test latest php/Symfony
          #- php: 8.3
          #  deps: stable
          #  symfony: '^7.0'

    steps:
      - name: Checkout code
        uses: 'actions/checkout@v3'

      - name: Install PHP with extensions
        uses: 'shivammathur/setup-php@v2'
        with:
          coverage: xdebug
          php-version: '${{ matrix.php }}'
          tools: 'composer:v2, flex'

      - name: Configure Symfony version
        run: 'echo SYMFONY_REQUIRE="${{ matrix.symfony }}" >> $GITHUB_ENV'

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - name: "Set up problem matchers for phpunit/phpunit"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/phpunit.json\""

      - name: Composer install
        uses: 'ramsey/composer-install@v2'
        with:
          dependency-versions: '${{ matrix.deps }}'
          composer-options: '--prefer-dist'

      - name: Run tests
        run: vendor/bin/phpunit --colors=always

  cs:
    name: 'Code Style'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          coverage: xdebug
          php-version: ${{ matrix.php }}
          tools: 'composer:v2, flex'

      - name: Composer install
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: stable
          composer-options: '--prefer-dist'

      - name: PHP-CS-Fixer
        run: vendor/bin/php-cs-fixer fix --diff --dry-run --show-progress=dots --ansi --verbose

      - name: Create Coverage Report
        run: |
          vendor/bin/phpunit \
          --colors=always \
          --coverage-text \
          --coverage-clover=./clover.xml

      - name: Send code coverage report to codecov.io
        uses: codecov/codecov-action@v3.1.5
        with:
          files: ./clover.xml
          token: ${{ secrets.CODECOV_TOKEN }}
